{"version":3,"sources":["components/upload_audio.js","components/sheet_music_display.js","App.js","serviceWorker.js","index.js"],"names":["buttonStyle","backgroundColor","margin","audio_form","FormData","server_endpoint","UploadAudio","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isStart","currTitle","readFile","file","document","getElementById","set","files","value","start","setState","props","uploadCallback","shouldPullFromFirebase","pause","cloudDownload","swal","buttons","cancel","text","visible","confirm","then","confirmDownload","convertToPdf","restartSheet","confirmRestart","editTitle","content","title","upload","fetch","method","body","response","record","getListings","button","closeModal","name","url","inherits","createClass","key","react_default","a","createElement","index_es","className","Tooltip_default","style","onClick","PlayArrow_default","Pause_default","Refresh_default","Edit_default","Audiotrack_default","CloudDownload_default","ShoppingCart_default","Component","SheetMusicDisplay","options","viewportHorizontal","responsive","abcjs","renderAbc","tune","join","id","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","freq_to_note","19600","20765","22000","23308","24694","26163","27718","29366","31113","32963","34923","36999","39200","41530","44000","46616","49388","52325","55437","58733","62225","65925","69846","App","music","counter","measureCounter","update","param","arr","tmp","includes","replace","slice","unshift","forceUpdate","window","print","_this2","ref","child","on","snap","push","frequency","temp","keys","i","get_note","val","variant","components_upload_audio","components_sheet_music_display","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11cea7bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport {IconButton, Card, LinearProgress} from '@material-ui/core';\nimport Audiotrack from '@material-ui/icons/Audiotrack';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport Edit from '@material-ui/icons/Edit';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport Refresh from '@material-ui/icons/Refresh';\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './styles/upload_audio.css';\n\nlet buttonStyle = {\n    backgroundColor: '#bbbbee',\n    margin: '10px',\n};\n\nlet audio_form = new FormData();\nlet server_endpoint = 'http://httprelay.io/link/h53f';\n\nexport class UploadAudio extends Component {\n    state = {\n        isStart: true,\n        currTitle: '',\n    };\n\n    readFile = () => {\n        let file = document.getElementById('upload-audio');\n        audio_form.set(\"audio\", file.files[0], file.value);\n    }\n\n    start = () => {\n        this.setState({\n            isStart: false,\n        });\n        let params = {\n            shouldPullFromFirebase: true,\n        };\n        this.props.uploadCallback(params);\n    }\n\n    pause = () => {\n        this.setState({\n            isStart: true,\n        });\n        let params = {\n            shouldPullFromFirebase: false,\n        };\n        this.props.uploadCallback(params);\n    }\n\n    cloudDownload = () => {\n      swal({\n          buttons: {\n              cancel: {\n                  text: 'No',\n                  visible: true,\n              },\n              confirm: {\n                  text: 'Yes',\n                  visible: true,\n              },\n          },\n          text: 'Are you sure you want to download PDF?',\n      }).then(confirmDownload => {\n          if(confirmDownload) {\n              this.props.convertToPdf();\n          }\n      });\n    }\n\n    restartSheet = () => {\n        swal({\n            buttons: {\n                cancel: {\n                    text: 'No',\n                    visible: true,\n                },\n                confirm: {\n                    text: 'Yes',\n                    visible: true,\n                },\n            },\n            text: 'Are you sure you want to restart the music sheet?',\n        }).then(confirmRestart => {\n            if(confirmRestart) {\n                this.props.restartSheet();\n            }\n        });\n    }\n\n    editTitle = () => {\n        swal({\n            content: \"input\",\n            buttons: {\n                cancel: {\n                    text: 'Cancel',\n                    value: this.state.currTitle ? this.state.currTitle : '',\n                    visible: true,\n                },\n                confirm: {\n                    text: 'Save',\n                    visible: true,\n                },\n            },\n            text: 'Edit Music Sheet Title',\n        }).then(title => {\n            this.props.editTitle(title);\n            this.setState({\n                currTitle: title,\n            })\n        });\n    }\n\n    upload = () => {\n        fetch(server_endpoint,\n            {method: \"POST\", body: audio_form})\n        .then(response => {\n            swal(\"Uploaded!\", \"File has been uploaded!\", \"success\");\n            this.props.uploadCallback('X:1\\nT: Cooley\\'s\\nM: 4/4\\nL: 1/8\\nR: reel\\nK: Emin\\nD2|:\"Em\"EB{c}BA B2 EB|~B2 AB dBAG|');\n        });\n\n        // this.props.uploadCallback('X:1\\nT: Cooley\\'s\\nM: 4/4\\nL: 1/8\\nR: reel\\nK: Emin\\nD2|:\"Em\"EB{c}BA B2 EB|~B2 AB dBAG|\"D\"FDAD BDAD|FDAD dAFD|\\n\"Em\"EBBA B2 EB|B2 AB defg|\"D\"afe^c dBAF|1\"Em\"DEFD E2 D2:|2\"Em\"DEFD E2 gf||\\n|:\"Em\"eB B2 efge|eB B2 gedB|\"D\"A2 FA DAFA|A2 FA defg|\\n\"Em\"eB B2 eBgB|eB B2 defg|\"D\"afe^c dBAF|1\"Em\"DEFD E2 gf:|2\"Em\"DEFD E4|]\\n');\n        // this.props.uploadCallback('X:1\\nT: Cooley\\'s\\nM: 4/4\\nL: 1/8\\nR: reel\\nK: Emin|\\n\"Em\"EBBA B2 EB|B2 AB defg|\"D\"afe^c dBAF|1\"Em\"DEFD E2 D2:|2\"Em\"DEFD E2 gf||\\n|:\"Em\"eB B2 efge|eB B2 gedB|\"D\"A2 FA DAFA|A2 FA defg|\\n\"Em\"eB B2 eBgB|eB B2 defg|\"D\"afe^c dBAF|1\"Em\"DEFD E2 gf:|2\"Em\"DEFD E4|]\\n');\n    }\n\n    record = () => {\n        swal(\"Recorded!\", \"Audio has been recorded!\", \"success\");\n    }\n\n    getListings = () => {\n      swal({\n          text: 'Browse some sheet music on eBay!',\n          content: \"input\",\n          button: {\n            text: \"Search!\",\n            closeModal: false,\n          },\n      })\n          .then(name => {\n              if (!name) throw null;\n              let maxItems = 3;\n              let query = 'sheet music'\n              let url = `https://api.ebay.com/buy/browse/v1/item_summary/search?q=${query}&limit=${maxItems}`;\n              fetch(url, {\n                  method: 'get',\n              });\n              swal(\n                  '',\n                  'Top recommendation: 1864 Stephen Foster Sheet Music - \"Beautiful Dreamer\"; $6.00',\n                  \"success\"\n              );\n          });\n    }\n\n    render() {\n        return (\n            <Card className=\"button-holder\">\n                {this.state.isStart ? (\n                    <Tooltip title=\"Start Recording\">\n                        <IconButton style={buttonStyle} onClick={this.start}>\n                            <PlayArrow/>\n                        </IconButton>\n                    </Tooltip>\n                ) : (\n                    <Tooltip title=\"Pause Recording\">\n                        <IconButton style={buttonStyle} onClick={this.pause}>\n                            <Pause/>\n                        </IconButton>\n                    </Tooltip>\n                )}\n                <Tooltip title=\"Restart Music Sheet\">\n                    <IconButton style={buttonStyle} onClick={this.restartSheet}>\n                        <Refresh/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Edit Title\">\n                    <IconButton style={buttonStyle} onClick={this.editTitle}>\n                        <Edit/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Share\">\n                    <IconButton style={buttonStyle} onClick={this.record}>\n                        <Audiotrack/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Download Music Sheet\">\n                    <IconButton style={buttonStyle} onClick={this.cloudDownload}>\n                        <CloudDownload/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Browse Music Sheets\">\n                    <IconButton style={buttonStyle} onClick={this.getListings}>\n                        <ShoppingCart/>\n                    </IconButton>\n                </Tooltip>\n            </Card>\n        )\n    }\n}\n\nexport default UploadAudio\n","import React, { Component } from 'react';\nimport abcjs from \"abcjs/midi\";\nimport './styles/sheet_music_display.css';\n\nexport class SheetMusicDisplay extends Component {\n    options = {\n        viewportHorizontal: true,\n        responsive: 'resize',\n    }\n    componentDidUpdate(props){\n        abcjs.renderAbc(\"sheet\", props.tune.join(' '), this.options);\n    }\n    render() {\n        return (\n            <div id=\"sheet\"></div>\n        )\n    }\n}\n\nexport default SheetMusicDisplay\n","import React, { Component } from 'react';\nimport './App.css';\nimport UploadAudio from './components/upload_audio';\nimport SheetMusicDisplay from './components/sheet_music_display';\nimport { Typography } from '@material-ui/core';\nimport * as firebase from 'firebase';\nimport { stat } from 'fs';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nvar config = {\n    apiKey: \"AIzaSyDk8JlKOhj0xAc8HM5Q9gDwvybpQta90D4\",\n    authDomain: \"hacktech2019-233403.firebaseapp.com\",\n    databaseURL: \"https://hacktech2019-233403.firebaseio.com\",\n    projectId: \"hacktech2019-233403\",\n    storageBucket: \"hacktech2019-233403.appspot.com\",\n    messagingSenderId: \"1080115241329\"\n};\n\nfirebase.initializeApp(config);\nconst db = firebase.database();\n\nconst freq_to_note = {\n    19600:  ` G ` ,\n    20765:  ` ^G ` ,\n    22000:  ` A ` ,\n    23308:  ` ^A ` ,\n    24694:  ` B ` ,\n    26163:  ` c ` ,\n    27718:  ` ^c ` ,\n    29366:  ` d ` ,\n    31113:  ` ^d ` ,\n    32963:  ` e ` ,\n    34923:  ` f ` ,\n    36999:  ` ^f ` ,\n    39200:  ` g ` ,\n    41530:  ` ^g ` ,\n    44000:  ` a ` ,\n    46616:  ` ^a ` ,\n    49388:  ` b ` ,\n    52325:  ` c' ` ,\n    55437:  ` ^c' ` ,\n    58733:  ` d' ` ,\n    62225:  ` ^d' ` ,\n    65925:  ` e' ` ,\n    69846:  ` f' ` ,\n}\n\nfunction get_note(frequency){\n    let temp = 0;\n    let keys = Object.keys(freq_to_note);\n    for(let i = 0; i < keys.length; i++){\n        if(frequency > keys[i]){\n            temp = keys[i];\n        }else{\n            return (keys[i] - frequency < frequency - temp) ? freq_to_note[keys[i]] : freq_to_note[temp];\n        }\n    }\n}\n// 'X:1\\nT: Example\\nM: 4/4\\nL: 1/8\\nR: reel\\nK: C\\nD2|:\"Em\"EB{c}BA B2 EB|~B2 AB dBAG'\n\nclass App extends Component {\n    state = {\n        music: ['M:4\\/4\\nK:Fmaj\\n|'],\n        shouldPullFromFirebase: false,\n        counter: 0,\n        measureCounter: 0,\n        title: '',\n    };\n\n    componentDidMount(){\n        const noteRef = db.ref().child('note');\n        noteRef.on('value', snap => {\n            if(this.state.shouldPullFromFirebase) {\n                this.setState( state => {\n                    state.music.push( get_note(snap.val()*100) )\n                    if(state.measureCounter > 6) {\n                        state.music.push('|');\n                    }\n                    if(state.counter > 14){\n                        state.music.push('\\n|');\n                    }\n                    return {\n                        music: state.music,\n                        counter: state.counter > 14 ? 0 : state.counter + 1,\n                        measureCounter: state.measureCounter > 6 ? 0 : state.measureCounter + 1,\n                    }\n                })\n            }\n        });\n    }\n\n    update = (param) => {\n        this.setState({\n            shouldPullFromFirebase: param.shouldPullFromFirebase,\n        });\n    }\n\n    editTitle = (title) => {\n        let arr = this.state.music;\n        let tmp = arr[0];\n        if(tmp.includes('T:')) {\n            let regex = /T:.*\\n/g;\n            tmp = tmp.replace(regex, 'T: ' + title + '\\n');\n        }\n        else {\n            tmp = 'T: ' + title + '\\n' + tmp;\n        }\n        arr = arr.slice(1)\n        arr.unshift(tmp);\n        this.setState({\n            music: arr,\n            title: title,\n        }, () => this.forceUpdate());\n    }\n\n    convertToPdf = () => {\n        window.print()\n    }\n\n    restartSheet = () => {\n        this.setState({\n            music: ['M:4\\/4\\nK:Fmaj\\n|'],\n            title: '',\n        }, () => this.forceUpdate());\n    }\n\n    render() {\n        return (\n            <div className=\"app\" id=\"divToPrint\">\n                <Typography variant=\"h2\">\n                    Music 2 Note\n                </Typography>\n                <UploadAudio uploadCallback={this.update} editTitle={this.editTitle} convertToPdf={this.convertToPdf} restartSheet={this.restartSheet}/>\n                <SheetMusicDisplay tune={this.state.music}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}